if [[ $machine == 'linux'  ]]; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
fi

alias cat=bat
# conventional-commits
alias commit-types='cat ~/scripts/docs/commit-types'
alias ct='commit-types'
# git pull remote by current branch
alias pullhead='git pull origin $(git rev-parse --abbrev-ref HEAD)'
alias plh="pullhead"
alias pushhead='git push origin $(git rev-parse --abbrev-ref HEAD)'
alias psh="pushhead"
alias gtemp="git commit -m \"temp\" --no-verify"
alias gf="git flow"
alias gl="git log --graph --oneline --all"
alias gll="git log --oneline --decorate --all --graph --stat"
alias gld="git log --oneline --all --pretty=format:\"%h%x09%an%x09%ad%x09%s\""
alias gls="gl --show-signature"
alias gfa="git fetch --all"
alias grc="git rebase --continue"
alias ls="ls --color=auto"
alias lg="lazygit"
alias l='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'
alias npms="npmsearch"
alias c='fasd_cd -d'
alias -g G="| grep"
alias -g L="| less"
# alias -g C="| pbcopy"
alias -g P="pbpaste"
alias ys="yarn start"
alias ns="npm run start"
alias yb="yarn build"
alias tm="tmux"
alias vi="vim"
alias vim="nvim"
alias ...="../../"
alias ....="../../../"
alias .....="../../../../"
alias rm="rm -i"
alias emulator=${ANDROID_HOME}/emulator/emulator
# Resolutions 
# res: [ 768x1280, 1080x1920 ]
# -skin {res} 
alias and29='emulator @and29 -no-boot-anim -netdelay none -no-snapshot -wipe-data -skin 768x1280 &'
alias pixel_9.0='emulator @pixel_9.0 -no-boot-anim -netdelay none -no-snapshot -wipe-data -skin 1080x1920 &'
alias ls='ls --color=auto'
alias benchmark='hyperfine'
